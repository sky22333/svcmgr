name: 开发版本APK构建

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v0.0.1)'
        required: true
        default: 'v0.0.1'
        type: string

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache Gradle dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build debug APK
      run: ./gradlew assembleDebug
      
    - name: List APK files
      run: find app/build/outputs/apk/debug/ -name "*.apk" -type f
      
    - name: Upload debug APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: debug-apk
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 7
        
    - name: Run lint
      run: ./gradlew lintDebug
      
    - name: Upload lint results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: lint-results
        path: app/build/reports/lint-results-debug.html
        retention-days: 7
        
    - name: Set release tag
      id: set_tag
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          TAG="${{ github.event.inputs.tag }}"
        else
          TAG="v0.0.1"
        fi
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        echo "Using tag: $TAG"

    - name: Get APK path
      id: get_apk
      run: |
        APK_PATH=$(find app/build/outputs/apk/debug/ -name "*.apk" -type f | head -1)
        echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
        echo "Found APK: $APK_PATH"

    - name: Set build time (Asia/Shanghai)
      run: |
        echo "BUILD_TIME=$(TZ='Asia/Shanghai' date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

    - name: Create or Update Release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.set_tag.outputs.tag }}
        name: Build ${{ steps.set_tag.outputs.tag }}
        body: |
          开发版本APK
          
          构建信息：
          - 分支: ${{ github.ref_name }}
          - 提交: ${{ github.sha }}
          - 构建编号: ${{ github.run_number }}
          - 构建时间: ${{ env.BUILD_TIME }} (Asia/Shanghai)
        draft: false
        prerelease: true
        files: ${{ steps.get_apk.outputs.apk_path }}
